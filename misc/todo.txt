- Papers
  - Madras-trie
  - Leopard trie
  - Graspring algo - Greedy Rank Stacked pointer reducing and grouping algorithm
  - Word grasping text indexing and compression
  - Triestosski - Empirical and Stochastic sibling skipping for tries
  - Patrilous - Patricia Trie Level ordered Unary Sequences
  - GCFC (Greedy Cuckoo Frequency Cache)
  - Sortable variable integers (?)
  - Madras Sorcery - Using succinct tries for highly compressed transactional data

  - POV: Of popcount, rank, select and SIMD instructions
  - Madras-SQL
 
- 0 + single byte encoding
- 10 + prefix len code + len
- 110 - dictionary code + len
- 111 - earlier pos + len

Issues:
+ Fix single value trie
+ Val mismatch - ./run_tests misc/word_freq_sorted.txt 2
+ Null/empty not working key_index = 0/1
+ Col trie not working for all columns
+ nodes_for_sort->data null for tails?
+ amazon_products seg fault imgURL type u
+ amazon_products seg fault imgURL type u, single column
+ implement secondary cache for reverse lookup
+ Re evaluate export_sqlite. Bug in key column spec
+ amazon_products key column 1 seg fault
+ allCountries_an seg fault
+ node_id < 0
+ step idx 1 + inner tries hanging enw
+ ./export_sqlite ~/git2/stackoverflow_db/census.db surnames 0 0t0055YYYYYY tttttttttttt seg fault
+ allCountries 7 17 not working
+ cur_col_idx -1 ?
+ max_len not setting for col_trie
+ daily_weather delta encoding not working 64-128
+ suf.txt mismatch
+ amazon_products sums not matching
x ptr_bit_count not working explite all cases
+ amazon products Val len mismatch: 558782, 2 - : 82: 62
+ amazon_products imgurl trie lookup fail
+ run_tests with val seg fault
+ amazon_products_title next() shifting values
+ data_type 'i' and delta don't work?
+ uk-urls grasping lookup/rev lookup fail
+ select child count (ns_count) 513 edge case - so_users LastAccessDate 1000
+ col not matching so_users AboutMe 900
+ endless loops (in read_suffix) so_users DisplayName 10000
+ partial_sfx_coding not working daily_weather date 1 (grp_count = 1 flat)
- stack over flow in reverse_lookup
- common-crawl lookup fail

+ make select faster
+ avoid get_first_byte
x tail_ptr cache
+ improve get_tail_ptr (32/64 bit ptr buckets)
x remove reverse cache

+ 0 is imaginary root
x 6 byte cache struct
+ suffix coding should allocate only suffix length
+ prev_key_pos logic
+ individual bitmaps?
+ separate no group tail_map

+ is reverse cache effective?
+ rank/select is slow?

- improve dart
- next cascading greedy cuckoo
- ptr bit count in fwd cache
- differentiating using term flag, leaf flag for ptr reduction?
- improve leapfrog using SIMD (not working for freq sorted)

# sort nodes on freq for madras bench
x separate leaf flags
x seperate all flags?
+ reverse cache end tail

- single value yyynnnnn xx 
- range        yyynnnnn xx
- bitmap       nnnnnyxx
- delta?       yyynnnnn xx

+ cleanup leopard trie
+ splitting tails into words?
+ Fix explite to insert all columns at a time
+ date data type
+ cleanup null/empty handling
+ next not working on i12

Making trie build faster
- sort keys
- compare 2 keys find cmp
- keep comparing 3rd, 4th etc. till cmp is the same
- combine and make as node with weight and tail
- for first pass root is 0
- for next pass track parent
- keep sorting nodes on weight

val interface:
- export_sqlite <db_file> <table_or_select> <storage_types> <encoding_types> <row_count=0> <offset=0> <key_column_list_0> <key_column_list_1> ... <key_column_list_n>
- raw inputs, store processed data as column sets with ovint, primary trie holds pointers to columns sets

data layout for LSM
- store in the order of primary index
- store in insert order with secondary indices
- store some/all values as keys so values become tails for better compression ** ??
- mainly uses insert(vals)
  - for case 1, store in all_vals, insert into leopard with col_val
  - for case 2, store in all_vals
  - for case 3, same as case 1
  - for all 3 cases, secondary indices can be built later

u32or64
- bm_loc
- ptr_bits_reader::ptr_loc
- ptr_group_map::ptr_bm_loc
- tail_ptr_group_map::bm_ptr
- tail_ptr_flat_map::int_ptr_bv
- select1::bm_loc
- trie_flags::bm_
- tf_loc, tf_ptr_loc
- lookup::bm_mask
- val_ptr_group_map::bm_ptr

- Storage format for LSM
- GPU resident
- Indexed data transfer format for use in browsers
- Storing historical static data
- Compressed and indexed Columnar data format
- Storing data in S3 )??)
- Full text word index
- Two way indexing
- Composite static index
- Type aware
- Open format

Split tails and val texts
- Code for start Multiple
  - For tail, followed by ptr to parts
  - For value, followed by parts
  - Ends with same code
- Code for (huffman encoded?) literals

+ run_tests chk_sum and len
+ col_trie tail split not working
+ reverse lookup for col_tries
x tail - part bin and part text
x difference between marisa for small datasets
+ Setting value for NULL/EMPTY
+ next not working for leapfrog
+ Run on CUDA cores?
+ Multiple column key/values
+ Multiple column key/value double mismatch df_sales

- Implement Repeat (RLE)
- Word encoding for Vals and tails and optional index
- wrong totals for integer/doubles
- ALP and fast_lanes
- Simply store option
- Fix grouping logic
- Cleanup madras builder
- Implement 32/64 bit

- implement dessicate
* replace for !no_primary_trie
- primary key value extract
- Secondary indexes
- Compression levels as parameter
- 1 file for each column
- Next val for performance
- INT32/64, float double
- interface for multiple keys on pk and sk

- count errors/warnings on export
- CSV/JSON export?
- Auto encoding option
- GUI for viewing/creating from SQLite / CSV
- SQL interface
- JDBC driver
- ODBC driver
- Support CTAS on Spark / BigQuery?
- Testing on Other OS?
- Emscripten support

- Integrity check
- Testing with boundary conditions 64/512
- Setup unit tests
- Doxyfile
- Documentation and format definition
- check release and leaks

- Pure Rust/Go version?
- Integrate Unishox
- GUI crashing on linux

Integer codec with ALP
- flavic48
