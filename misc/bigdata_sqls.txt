create table word_freq using orc
select * from jdbc.`sqlite:/Users/arun/git2/stackoverflow_db/census.db`.sur_names;

create table census_madras using jdbc
select * from jdbc.`sqlite:/Users/arun/git/madras-sqlite/census.db`.v1;

CREATE TEMPORARY VIEW census_sqlite
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git/madras-sqlite/census.db',
  dbtable 'v1'
);

CREATE TEMPORARY VIEW all_countries_sqlite
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git2/sqlite_dbs/allCountries.db',
  dbtable 'all_countries_vw'
);

CREATE TEMPORARY VIEW so_users_mdx
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git/madras-sqlite/so_users.db',
  dbtable 'v1'
);

CREATE TEMPORARY VIEW amzn_pdts_mdx
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git/madras-sqlite/amzn_pdts.db',
  dbtable 'v1'
);

CREATE TEMPORARY VIEW census_mdx
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git/madras-sqlite/census.db',
  dbtable 'v1'
);

create table census using orc
select * from csv.`/Users/arun/git2/stackoverflow_db/census.txt`;

CREATE TEMPORARY VIEW babynames_sqlite
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git2/stackoverflow_db/babynames.db',
  dbtable 'gendered_names'
);

create table babynames_parquet_gz using parquet options ('compression' 'gzip') select * from babynames_sqlite;

create table babynames_orc_gz using orc options ('compression' 'zlib')
select * from babynames_sqlite;

CREATE TEMPORARY VIEW census_csv_view
USING csv 
OPTIONS (
  path '/Users/arun/git2/stackoverflow_db/census.txt',
  header true,
  inferSchema true
);

create table census_cd using CARBONDATA select * from census_csv_view;

create table census_ib using iceberg select * from census_csv_view;

CREATE TEMPORARY VIEW census_sqlite_db
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git2/stackoverflow_db/census.db',
  dbtable 'surnames'
);

CREATE TEMPORARY VIEW so_users_sqlite
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git2/sqlite_dbs/so_users.db',
  dbtable 'so_users',
  customSchema 'CreationDate STRING, LastAccessDate STRING'
);

CREATE OR REPLACE TEMPORARY VIEW so_users_fixed AS
SELECT
  Id,
  DisplayName,
  Location,
  Reputation,
  Views,
  UpVotes,
  DownVotes,
  AccountId,
  to_timestamp(
    REPLACE(CreationDate, 'T', ' '), 
    'yyyy-MM-dd HH:mm:ss.SSS'
  ) AS CreationDate,
  to_timestamp(
    REPLACE(LastAccessDate, 'T', ' '), 
    'yyyy-MM-dd HH:mm:ss.SSS'
  ) AS LastAccessDate,
  WebsiteUrl,
  AboutMe
FROM so_users_sqlite;

create table so_users_zstd using parquet options ('compression' 'zstd') select * from so_users_fixed;

CREATE TEMPORARY VIEW amzn_products_sqlite
USING jdbc
OPTIONS (
  url 'jdbc:sqlite:/Users/arun/git2/sqlite_dbs/amazon_products.db',
  dbtable 'products'
);

create table amzn_orc_gz using orc options ('compression' 'zlib') select * from amzn_products_sqlite;

create table amzn_parquet_zstd using parquet options ('compression' 'zstd') select * from amzn_products_sqlite;

create table amzn_parquet_gz using parquet options ('compression' 'gzip') select * from amen_products_sqlite;

create table amzn_parquet_lz4 using parquet options ('compression' 'lz4') select * from amzn_parquet_gz;

create table all_countries_parquet_gz using parquet options ('compression' 'gzip')
select * from all_countries_sqlite;

create table all_countries_parquet_zstd using parquet options ('compression' 'zstd')
select * from all_countries_sqlite;

SELECT * FROM spark.read.format("jdbc").option("url", "jdbc:sqlite:/Users/arun/git2/stackoverflow_db/mdr512.db").option("driver", "org.sqlite.JDBC").option("dbtable", "domain_rank").load();

CREATE TEMPORARY VIEW census_madras_vt USING org.apache.spark.sql.jdbc OPTIONS (url "jdbc:sqlite:/Users/arun/git/madras-sqlite/census.db", dbtable "load_ext", enable_load_extension "true");

CREATE TEMPORARY VIEW sqlite_mem USING org.apache.spark.sql.jdbc OPTIONS (url "jdbc:sqlite::memory", dbtable "sqlite_master", enable_load_extension "true");


create temporary view daily_weather_vw using parquet options (path '/Users/arun/git2/sqlite_dbs/daily_weather.parquet');

update so_users set LastAccessDate=replace(LastAccessDate, 'T', ' ');